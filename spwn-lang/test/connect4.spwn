board = [
	[counter(1i ), counter(2i ), counter(3i ), counter(4i ), counter(5i ), counter(6i ), counter(7i )],
	[counter(8i ), counter(9i ), counter(10i), counter(11i), counter(12i), counter(13i), counter(14i)],
	[counter(15i), counter(16i), counter(17i), counter(18i), counter(19i), counter(20i), counter(21i)],
	[counter(22i), counter(23i), counter(24i), counter(25i), counter(26i), counter(27i), counter(28i)],
	[counter(29i), counter(30i), counter(31i), counter(32i), counter(33i), counter(34i), counter(35i)],
	[counter(36i), counter(37i), counter(38i), counter(39i), counter(40i), counter(41i), counter(42i)],
]

selector_obj = 1g

selected = counter(3)

gamescene = import gamescene


sx = counter(0)
sy = counter(0)
result = counter(50i)
mode = counter(0) // 0 => read, 1 => write

reset_result = {
	result -= result.to_const([-1, 1])
}

w = board[0].length
h = board.length


reset_sx = {
	sx -= sx.to_const(1..w)
}

reset_sy = {
	sy -= sx.to_const(1..w)
}

interact = {
	x = sx.to_const(0..w)
	y = sy.to_const(0..h)
	c = board[y][x]
	
	if mode == 0 {
		//read
		result += c.to_const([-1, 1])
	} else {
		//write
		c += result.to_const([-1, 1])
	}
}

read_board = (x, y) {
	if mode == 1 {
		mode -= 1
	}
	reset_sx!
	reset_sy!
	reset_result!
	wait()
	sx += x
	sy += y
	interact!
	return result
}

write_board = (x, y, d) {
	if mode == 0 {
		mode += 1
	}
	reset_sx!
	reset_sy!
	reset_result!
	wait()
	result += d
	sx += x
	sy += y
	interact!
}


on(gamescene.button_a(), {
	if selected == 6 {
		selected -= 6
		selector_obj.move(-120, 0)
	} else {
		selected += 1
		selector_obj.move(20, 0)
	}
})

on(gamescene.button_b(), {
	x = selected
	for y in h..0 {
		if read_board(x, y) == 0 {
			write_board(x, y, 1)
		}
	}
	
})