hidden_group = ?g
hidden_group.alpha(0)
hide_player()

offset_y = 90

extra_off = 50

extract $
extract obj_props

//teleport portal
add(obj {
	OBJ_ID: 747,
	X: 19,
	Y: 0,
	YELLOW_TELEPORTATION_PORTAL_DISTANCE: offset_y,
	GROUPS: hidden_group,
})

//dual portal
add(obj {
	OBJ_ID: 286,
	X: 30,
	Y: offset_y,
	GROUPS: hidden_group,
})

//ship portal
add(obj {
	OBJ_ID: 13,
	X: 15,
	Y: offset_y,
	GROUPS: hidden_group,
})

follow_x_group = ?g
follow_y_group = ?g



//move trigger
//this is obj type because it needs a specific position
add(obj {
	OBJ_ID: 901,
	X: 90,
	Y: 90 + offset_y  - extra_off,
	LOCK_TO_PLAYER_X: true,
	TARGET: follow_x_group,
	DURATION: 999
})

//follop p y
add(obj {
	OBJ_ID: 1814,
	X: 90,
	Y: 120 + offset_y  - extra_off,
	TARGET: follow_y_group,
	DURATION: 999,
	SPEED: 1
})

ramp_offset = 6

//ramp
add(obj {
	OBJ_ID: 1744,
	HORIZONTAL_FLIP: true,
	ROTATION: -90,
	X: 90,
	Y: 53 + ramp_offset + offset_y  - extra_off,

	GROUPS: [hidden_group, follow_x_group],
})

//block
add(obj {
	OBJ_ID: 1,
	X: 65,
	Y: offset_y - 22  - extra_off,

	GROUPS: [hidden_group, follow_x_group],
})

player_block = ?b
collide_block = ?b

//collision blocks
add(obj {
	OBJ_ID: 1816,
	DYNAMIC_BLOCK: true,
	BLOCK_A: player_block,
	X: 90,
	Y: 8 + offset_y  - extra_off,
	GROUPS: [hidden_group, follow_x_group, follow_y_group]
})

add(obj {
	OBJ_ID: 1816,
	DYNAMIC_BLOCK: false,
	BLOCK_A: collide_block,
	X: 90,
	Y: 39.5 + ramp_offset / 2 + offset_y  - extra_off,
	GROUPS: [hidden_group, follow_x_group],

})



return {
	button_a: #[desc("Returns an event for when button A is pressed (the right side by default)")] () {
		return collision(player_block, collide_block)
	},
	button_b: #[desc("Returns an event for when button B is pressed (the left side by default)")] () {
		return touch(dual_side = true)
	},

	button_a_end: #[desc("Returns an event for when button A is released (the right side by default)")] () {
		return collision_exit(player_block, collide_block)
	},
	button_b_end: #[desc("Returns an event for when button B is released (the left side by default)")] () {
		return touch_end(dual_side = true)
	},
	hidden_group: #[desc("A group that is hidden (alpha = 0)")] hidden_group,
}

